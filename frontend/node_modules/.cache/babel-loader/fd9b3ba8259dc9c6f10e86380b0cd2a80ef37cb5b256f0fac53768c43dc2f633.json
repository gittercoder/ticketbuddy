{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\ticketbuddy\\\\frontend\\\\src\\\\components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  onButtonClick\n}) {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const handleNextClick = event => {\n    event.preventDefault(); // Prevent the form from submitting\n\n    if (password !== confirmPassword) {\n      setShowError(true);\n    } else {\n      // Passwords match, proceed with your logic\n      // For example, navigate to the next page or submit the form\n      setShowError(false);\n      onButtonClick(); // Call the onButtonClick function passed from the parent\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNextClick,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\",\n        placeholder: \"Username\",\n        name: \"username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input-field\",\n        placeholder: \"Confirm Password\",\n        name: \"password-confirm\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Passwords do not match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      className: \"signup-link\",\n      children: \"Already have an account? Sign in.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"cKPP30G5pH44SpL6KCsdkuvzLBg=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Card","onButtonClick","_s","password","setPassword","confirmPassword","setConfirmPassword","showError","setShowError","handleNextClick","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","name","required","value","onChange","e","target","style","color","href","_c","$RefreshReg$"],"sources":["D:/react/ticketbuddy/frontend/src/components/Card.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Card({ onButtonClick }) {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const handleNextClick = (event) => {\r\n    event.preventDefault(); // Prevent the form from submitting\r\n\r\n    if (password !== confirmPassword) {\r\n      setShowError(true);\r\n    } else {\r\n      // Passwords match, proceed with your logic\r\n      // For example, navigate to the next page or submit the form\r\n      setShowError(false);\r\n      onButtonClick(); // Call the onButtonClick function passed from the parent\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleNextClick}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-field\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n          placeholder=\"Confirm Password\"\r\n          name=\"password-confirm\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        {showError && <p style={{ color: \"red\" }}>Passwords do not match!</p>}\r\n        <button type=\"submit\" className=\"login-button\">\r\n          Next\r\n        </button>\r\n      </form>\r\n      <a href=\"/\" className=\"signup-link\">\r\n        Already have an account? Sign in.\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}